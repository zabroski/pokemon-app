{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/pokemon-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Layout/Heater';\nimport { getAllPokemon, getPokemon } from './services/pokemon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon/ditto';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      console.log(response);\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadingPokemon = async data => {\n    let pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon);\n      return pokemonRecord;\n    }));\n    setPokemonData(pokemonData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is fetched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oUetFPLsZHmmxGX3qhu3+Z/+iXQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/pokemon-app/src/App.js"],"names":["React","Fragment","useState","useEffect","Header","getAllPokemon","getPokemon","App","pokemonData","setPokemonData","nextUrl","setNexUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","fetchData","response","console","log","next","previous","loadingPokemon","results","data","Promise","all","map","pokemon","pokemonRecord"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAAyC,oBAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMc,UAAU,GAAG,yCAAnB;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMb,aAAa,CAACW,UAAD,CAAlC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,MAAAA,SAAS,CAACO,QAAQ,CAACG,IAAV,CAAT;AACAR,MAAAA,UAAU,CAACK,QAAQ,CAACI,QAAV,CAAV;AACA,YAAMC,cAAc,CAACL,QAAQ,CAACM,OAAV,CAApB;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDE,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,cAAc,GAAG,MAAOE,IAAP,IAAgB;AACrC,QAAIjB,WAAW,GAAG,MAAMkB,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAL,CAAS,MAAMC,OAAN,IAAiB;AAC5D,UAAIC,aAAa,GAAG,MAAMxB,UAAU,CAACuB,OAAD,CAApC;AACA,aAAOC,aAAP;AACD,KAHmC,CAAZ,CAAxB;AAIArB,IAAAA,cAAc,CAACD,WAAD,CAAd;AAED,GAPD;;AAUA,sBACE,QAAC,QAAD;AAAA,cAEGM,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCQP,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React,{ Fragment, useState, useEffect } from 'react';\n\nimport Header from './components/Layout/Heater';\nimport { getAllPokemon, getPokemon} from './services/pokemon';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon/ditto';\n\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      console.log(response)\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n  const loadingPokemon = async (data) => {\n    let pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon);\n      return pokemonRecord\n    }))\n    setPokemonData(pokemonData)\n\n  }\n\n \n  return (\n    <Fragment>\n      {/* <Header  /> */}\n      {loading ? <h1>loading.....</h1> : (\n        <h1>Data is fetched</h1>\n      )}\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}