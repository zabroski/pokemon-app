{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/pokemon-app/src/components/CardList/CardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from \"../Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardList({\n  pokemon\n}) {\n  _s();\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      let pokemon = await loadingPokemon(response.results);\n      console.log(pokemon);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  const [loading, setLoading] = useState(true);\n  const [pokemonData, setPokemonData] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardList\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: pokemonData.map((pokemon, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          pokemon: pokemon\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"Bw8RQ36MmilErV+aS2kg96uJ+0o=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/pokemon-app/src/components/CardList/CardList.js"],"names":["React","useState","useEffect","Card","CardList","pokemon","fetchData","response","getAllPokemon","initialUrl","setNexUrl","next","setPrevUrl","previous","loadingPokemon","results","console","log","setLoading","data","_pokemonData","Promise","all","map","pokemonRecord","getPokemon","url","setPokemonData","loading","pokemonData","i"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAkB,cAAlB;;;AAGA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAK3BH,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeI,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMC,aAAa,CAACC,UAAD,CAAlC;AACAC,MAAAA,SAAS,CAACH,QAAQ,CAACI,IAAV,CAAT;AACAC,MAAAA,UAAU,CAACL,QAAQ,CAACM,QAAV,CAAV;AACA,UAAIR,OAAO,GAAG,MAAMS,cAAc,CAACP,QAAQ,CAACQ,OAAV,CAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAa,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDZ,IAAAA,SAAS;AACV,GAVM,EAUJ,EAVI,CAAT;;AAYE,QAAMQ,cAAc,GAAG,MAAOK,IAAP,IAAgB;AACrC,QAAIC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAR,CACvBH,IAAI,CAACI,GAAL,CAAS,MAAMlB,OAAN,IAAiB;AAC1B,UAAImB,aAAa,GAAG,MAAMC,UAAU,CAACpB,OAAO,CAACqB,GAAT,CAApC;AACA,aAAOF,aAAP;AACD,KAHC,CADuB,CAAzB;;AAMAG,IAAAA,cAAc,CAACP,YAAD,CAAd;AACD,GARD;;AAUF,QAAM,CAACQ,OAAD,EAAUV,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC4B,WAAD,EAAcF,cAAd,IAAgC1B,QAAQ,CAAC,EAAD,CAA9C;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAEC2B,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEL;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGC,WAAW,CAACN,GAAZ,CAAgB,CAAClB,OAAD,EAAUyB,CAAV,KAAgB;AAC/B,4BAAO,QAAC,IAAD;AAAc,UAAA,OAAO,EAAEzB;AAAvB,WAAWyB,CAAX;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AAJH;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA3CQ1B,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf","sourcesContent":["\nimport React,{ useState, useEffect } from 'react';\nimport Card  from \"../Card/Card\";\n\n\nfunction CardList({ pokemon }) {\n\n\n\n\n    useEffect(() => {\n        async function fetchData() {\n          let response = await getAllPokemon(initialUrl);\n          setNexUrl(response.next);\n          setPrevUrl(response.previous);\n          let pokemon = await loadingPokemon(response.results);\n          console.log(pokemon);\n          setLoading(false);\n        }\n        fetchData();\n      }, [])\n    \n      const loadingPokemon = async (data) => {\n        let _pokemonData = await Promise.all(\n          data.map(async pokemon => {\n          let pokemonRecord = await getPokemon(pokemon.url);\n          return pokemonRecord;\n        }))\n    \n        setPokemonData(_pokemonData)\n      };\n\n    const [loading, setLoading] = useState(true);\n    const [pokemonData, setPokemonData] = useState([]);\n    return (\n        <div className=\"CardList\">\n            {\n         loading ? <h1>loading.....</h1> :(\n        \n           <div className=\"grid-container\">\n             {pokemonData.map((pokemon, i) => {\n               return <Card key={i} pokemon={pokemon} />\n             })}\n           </div>\n         )\n      }\n        </div>\n  );\n}\n\nexport default CardList;\n\n"]},"metadata":{},"sourceType":"module"}