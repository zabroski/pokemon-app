{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/pokemon-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React,{ useState, useEffect } from 'react';\n// import { getAllPokemon, getPokemon} from './services/pokemon';\n// import Card from './components/Card';\n// function App() {\n//   const [pokemonData, setPokemonData] = useState([]);\n//   const [nextUrl, setNexUrl] = useState('');\n//   const [prevUrl, setPrevUrl] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n//   useEffect(() => {\n//     async function fetchData() {\n//       let response = await getAllPokemon(initialUrl);\n//       setNexUrl(response.next);\n//       setPrevUrl(response.previous);\n//       let pokemon = await loadingPokemon(response.results);\n//       console.log(pokemon);\n//       setLoading(false);\n//     }\n//     fetchData();\n//   }, [])\n//   const loadingPokemon = async (data) => {\n//     let _pokemonData = await Promise.all(\n//       data.map(async pokemon => {\n//       let pokemonRecord = await getPokemon(pokemon.url);\n//       return pokemonRecord;\n//     }))\n//     setPokemonData(_pokemonData)\n//   };\n//   console.log(pokemonData)\n//   return (\n//     <div>\n//       {\n//          loading ? <h1>loading.....</h1> :(\n//            <>\n//            <div>\n//              {pokemonData.map((pokemon, i) => {\n//                return <Card key={i} pokemon={pokemon} />\n//              })}\n//            </div>\n//            </>\n//          )\n//       }\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport { getPokemon, getAllPokemon } from './services/pokemon';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon'; // const initialURL = 'https://pokeapi.co/api/v2/pokemon'\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialURL);\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadPokemon(response.results);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  };\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  };\n\n  const loadPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container\",\n          children: pokemonData.map((pokemon, i) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              pokemon: pokemon\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), \"``\"]\n  }, void 0, true);\n}\n\n_s(App, \"5DN6bkeDAcxk4ZGy0WU2XM8fQHA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/pokemon-app/src/App.js"],"names":["React","useState","useEffect","Navbar","Card","getPokemon","getAllPokemon","App","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialURL","fetchData","response","next","previous","loadPokemon","results","data","prev","_pokemonData","Promise","all","map","pokemon","pokemonRecord","textAlign","i"],"mappings":"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","sourcesContent":["// import React,{ useState, useEffect } from 'react';\n// import { getAllPokemon, getPokemon} from './services/pokemon';\n// import Card from './components/Card';\n\n// function App() {\n//   const [pokemonData, setPokemonData] = useState([]);\n//   const [nextUrl, setNexUrl] = useState('');\n//   const [prevUrl, setPrevUrl] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       let response = await getAllPokemon(initialUrl);\n     \n//       setNexUrl(response.next);\n//       setPrevUrl(response.previous);\n//       let pokemon = await loadingPokemon(response.results);\n//       console.log(pokemon);\n//       setLoading(false);\n//     }\n//     fetchData();\n//   }, [])\n\n//   const loadingPokemon = async (data) => {\n//     let _pokemonData = await Promise.all(\n//       data.map(async pokemon => {\n//       let pokemonRecord = await getPokemon(pokemon.url);\n//       return pokemonRecord;\n//     }))\n\n//     setPokemonData(_pokemonData)\n//   };\n\n//   console.log(pokemonData)\n//   return (\n//     <div>\n//       {\n//          loading ? <h1>loading.....</h1> :(\n//            <>\n//            <div>\n//              {pokemonData.map((pokemon, i) => {\n//                return <Card key={i} pokemon={pokemon} />\n//              })}\n//            </div>\n//            </>\n//          )\n//       }\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport { getPokemon, getAllPokemon } from './services/pokemon';\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([])\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon';\n  // const initialURL = 'https://pokeapi.co/api/v2/pokemon'\n\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialURL)\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const loadPokemon = async (data) => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon)\n      return pokemonRecord\n    }))\n    setPokemonData(_pokemonData);\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div>\n        {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\n          <>\n            <div className=\"btn\">\n              <button onClick={prev}>Prev</button>\n              <button onClick={next}>Next</button>\n            </div>\n            <div className=\"grid-container\">\n              {pokemonData.map((pokemon, i) => {\n                return <Card key={i} pokemon={pokemon} />\n              })}\n            </div>\n            <div className=\"btn\">\n              <button onClick={prev}>Prev</button>\n              <button onClick={next}>Next</button>\n            </div>\n          </>\n        )}\n      </div>``\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}