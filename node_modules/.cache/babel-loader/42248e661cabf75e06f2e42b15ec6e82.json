{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/pokemon-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Layout/Heater';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ditto, setDitto] = useState([]);\n  useEffect(() => {\n    fetch('https://pokeapi.co/api/v2/pokemon/ditto').then(response => response.json().then(ditto => {\n      setDitto(ditto);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      ditto: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2Y6eXzURWUrpnbRiulxZeanXi1w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/pokemon-app/src/App.js"],"names":["React","Fragment","useState","useEffect","Header","App","ditto","setDitto","fetch","then","response","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACIC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,yCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAKA,QAAQ,CAACC,IAAT,GAClBF,IADkB,CACbH,KAAK,IAAI;AAACC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AAAgB,KADb,CADvB;AAIH,GALU,EAKT,EALS,CAAT;AAOJ,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,MAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAdQD,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["import React,{ Fragment, useState, useEffect } from 'react';\n\nimport Header from './components/Layout/Heater';\n\nfunction App() {\n  const [ditto, setDitto] = useState([]);\n      useEffect(() => {\n        fetch('https://pokeapi.co/api/v2/pokemon/ditto')\n            .then(response =>  response.json()\n            .then(ditto => {setDitto(ditto)}))\n           \n    },[])\n  \n  return (\n    <Fragment>\n      <Header  ditto=''/>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}