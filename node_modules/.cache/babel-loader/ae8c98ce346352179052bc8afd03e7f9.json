{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/pokemon-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Layout/Heater';\nimport { getAllPokemon } from './services/pokemon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      console.log(response);\n      setNexUrl(response.next);\n      setPrevUrl(response.previous); // let pokemon = await loadingPokemon(response.results);\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []); // const loadingPokemon = async (data) => {\n  //   let _pokemonData = await Promise.all(\n  //     data.map(async pokemon => {\n  //     let pokemonRecord = await getPokemon(pokemon.url);\n  //     return pokemonRecord;\n  //   })\n  //   );\n  //   setPokemonData(_pokemonData)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is fetched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oUetFPLsZHmmxGX3qhu3+Z/+iXQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/pokemon-app/src/App.js"],"names":["React","useState","useEffect","Header","getAllPokemon","App","pokemonData","setPokemonData","nextUrl","setNexUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","fetchData","response","console","log","next","previous"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,QAA6B,oBAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMa,UAAU,GAAG,mCAAnB;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMZ,aAAa,CAACU,UAAD,CAAlC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAP,MAAAA,SAAS,CAACO,QAAQ,CAACG,IAAV,CAAT;AACAR,MAAAA,UAAU,CAACK,QAAQ,CAACI,QAAV,CAAV,CALyB,CAMzB;;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDE,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT,CARa,CAqBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,sBACE;AAAA,cACGH,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCQP,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\n\nimport Header from './components/Layout/Heater';\nimport { getAllPokemon} from './services/pokemon';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      console.log(response)\n\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      // let pokemon = await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n  // const loadingPokemon = async (data) => {\n  //   let _pokemonData = await Promise.all(\n  //     data.map(async pokemon => {\n  //     let pokemonRecord = await getPokemon(pokemon.url);\n  //     return pokemonRecord;\n  //   })\n  //   );\n  //   setPokemonData(_pokemonData)\n  // };\n\n\n \n  return (\n    <div>\n      {loading ? <h1>loading.....</h1> : (\n        <h1>Data is fetched</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}