{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/pokemon-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getAllPokemon, getPokemon } from './services/pokemon';\nimport Card from './components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      let pokemon = await loadingPokemon(response.results);\n      console.log(pokemon);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  console.log(pokemonData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pokemonData.map((pokemon, i) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            pokemon: pokemon\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oUetFPLsZHmmxGX3qhu3+Z/+iXQ=\");\n\n_c = App;\nexport default App; // import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Card from './components/Card';\n// import { getPokemon, getAllPokemon } from './services/pokemon';\n// import './App.css';\n// function App() {\n//   const [pokemonData, setPokemonData] = useState([])\n//   const [nextUrl, setNextUrl] = useState('');\n//   const [prevUrl, setPrevUrl] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const initialURL = 'https://pokeapi.co/api/v2/pokemon';\n//   // const initialURL = 'https://pokeapi.co/api/v2/pokemon'\n//   useEffect(() => {\n//     async function fetchData() {\n//       let response = await getAllPokemon(initialURL)\n//       setNextUrl(response.next);\n//       setPrevUrl(response.previous);\n//       await loadPokemon(response.results);\n//       setLoading(false);\n//     }\n//     fetchData();\n//   }, [])\n//   const next = async () => {\n//     setLoading(true);\n//     let data = await getAllPokemon(nextUrl);\n//     await loadPokemon(data.results);\n//     setNextUrl(data.next);\n//     setPrevUrl(data.previous);\n//     setLoading(false);\n//   }\n//   const prev = async () => {\n//     if (!prevUrl) return;\n//     setLoading(true);\n//     let data = await getAllPokemon(prevUrl);\n//     await loadPokemon(data.results);\n//     setNextUrl(data.next);\n//     setPrevUrl(data.previous);\n//     setLoading(false);\n//   }\n//   const loadPokemon = async (data) => {\n//     let _pokemonData = await Promise.all(data.map(async pokemon => {\n//       let pokemonRecord = await getPokemon(pokemon)\n//       return pokemonRecord\n//     }))\n//     setPokemonData(_pokemonData);\n//   }\n//   return (\n//     <>\n//       <Navbar />\n//       <div>\n//         {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\n//           <>\n//             <div className=\"btn\">\n//               <button onClick={prev}>Prev</button>\n//               <button onClick={next}>Next</button>\n//             </div>\n//             <div className=\"grid-container\">\n//               {pokemonData.map((pokemon, i) => {\n//                 return <Card key={i} pokemon={pokemon} />\n//               })}\n//             </div>\n//             <div className=\"btn\">\n//               <button onClick={prev}>Prev</button>\n//               <button onClick={next}>Next</button>\n//             </div>\n//           </>\n//         )}\n//       </div>``\n//     </>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/pokemon-app/src/App.js"],"names":["React","useState","useEffect","getAllPokemon","getPokemon","Card","App","pokemonData","setPokemonData","nextUrl","setNexUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","fetchData","response","next","previous","pokemon","loadingPokemon","results","console","log","data","_pokemonData","Promise","all","map","pokemonRecord","url","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAAyC,oBAAzC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMc,UAAU,GAAG,mCAAnB;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMd,aAAa,CAACY,UAAD,CAAlC;AAEAL,MAAAA,SAAS,CAACO,QAAQ,CAACC,IAAV,CAAT;AACAN,MAAAA,UAAU,CAACK,QAAQ,CAACE,QAAV,CAAV;AACA,UAAIC,OAAO,GAAG,MAAMC,cAAc,CAACJ,QAAQ,CAACK,OAAV,CAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDE,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMK,cAAc,GAAG,MAAOI,IAAP,IAAgB;AACrC,QAAIC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAR,CACvBH,IAAI,CAACI,GAAL,CAAS,MAAMT,OAAN,IAAiB;AAC1B,UAAIU,aAAa,GAAG,MAAM1B,UAAU,CAACgB,OAAO,CAACW,GAAT,CAApC;AACA,aAAOD,aAAP;AACD,KAHC,CADuB,CAAzB;;AAMAtB,IAAAA,cAAc,CAACkB,YAAD,CAAd;AACD,GARD;;AAUAH,EAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACA,sBACE;AAAA,cAEKM,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACL;AAAA,6BACA;AAAA,kBACGN,WAAW,CAACsB,GAAZ,CAAgB,CAACT,OAAD,EAAUY,CAAV,KAAgB;AAC/B,8BAAO,QAAC,IAAD;AAAc,YAAA,OAAO,EAAEZ;AAAvB,aAAWY,CAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAHP;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA/CQ1B,G;;KAAAA,G;AAiDT,eAAeA,GAAf,C,CAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport { getAllPokemon, getPokemon} from './services/pokemon';\nimport Card from './components/Card';\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n     \n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      let pokemon = await loadingPokemon(response.results);\n      console.log(pokemon);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n  const loadingPokemon = async (data) => {\n    let _pokemonData = await Promise.all(\n      data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }))\n\n    setPokemonData(_pokemonData)\n  };\n\n  console.log(pokemonData)\n  return (\n    <div>\n      {\n         loading ? <h1>loading.....</h1> :(\n           <>\n           <div>\n             {pokemonData.map((pokemon, i) => {\n               return <Card key={i} pokemon={pokemon} />\n             })}\n           </div>\n           </>\n         )\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Card from './components/Card';\n// import { getPokemon, getAllPokemon } from './services/pokemon';\n// import './App.css';\n\n// function App() {\n//   const [pokemonData, setPokemonData] = useState([])\n//   const [nextUrl, setNextUrl] = useState('');\n//   const [prevUrl, setPrevUrl] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const initialURL = 'https://pokeapi.co/api/v2/pokemon';\n//   // const initialURL = 'https://pokeapi.co/api/v2/pokemon'\n\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       let response = await getAllPokemon(initialURL)\n//       setNextUrl(response.next);\n//       setPrevUrl(response.previous);\n//       await loadPokemon(response.results);\n//       setLoading(false);\n//     }\n//     fetchData();\n//   }, [])\n\n//   const next = async () => {\n//     setLoading(true);\n//     let data = await getAllPokemon(nextUrl);\n//     await loadPokemon(data.results);\n//     setNextUrl(data.next);\n//     setPrevUrl(data.previous);\n//     setLoading(false);\n//   }\n\n//   const prev = async () => {\n//     if (!prevUrl) return;\n//     setLoading(true);\n//     let data = await getAllPokemon(prevUrl);\n//     await loadPokemon(data.results);\n//     setNextUrl(data.next);\n//     setPrevUrl(data.previous);\n//     setLoading(false);\n//   }\n\n//   const loadPokemon = async (data) => {\n//     let _pokemonData = await Promise.all(data.map(async pokemon => {\n//       let pokemonRecord = await getPokemon(pokemon)\n//       return pokemonRecord\n//     }))\n//     setPokemonData(_pokemonData);\n//   }\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div>\n//         {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\n//           <>\n//             <div className=\"btn\">\n//               <button onClick={prev}>Prev</button>\n//               <button onClick={next}>Next</button>\n//             </div>\n//             <div className=\"grid-container\">\n//               {pokemonData.map((pokemon, i) => {\n//                 return <Card key={i} pokemon={pokemon} />\n//               })}\n//             </div>\n//             <div className=\"btn\">\n//               <button onClick={prev}>Prev</button>\n//               <button onClick={next}>Next</button>\n//             </div>\n//           </>\n//         )}\n//       </div>``\n//     </>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}